package tw.com.soyong.mebook;

import java.io.FileNotFoundException;
import java.io.IOException;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Mebook
//  @ File Name : MebookHeader.java
//  @ Date : 2009/3/23
//  @ Author : Victor
//
//

public class MebookHeader {
	
    static final int CONTENTID_LENGTH   = 10;
    static final int TITLENAME_LENGTH   = 48;
    static final int BOOKID_LENGTH      = 12;
    static final int SUBID_LENGTH       = 8;
    static final int SDSERIALNO_LENGTH  = 8;
    static final String SY_TAG        = "SY";	
    
    static final int CHAPTER_INFO_SIZE    =40;
    static final int SIZE = 200;
	
//	public String mSyTag;
	public String mContentID;
	public String mTitleName;
	public String mBookID;
	public String mSubID;
	public int mMajorVersion;
	public int mMinorVersion;
	public int mUIMode;
	public int mEncodeMode;
	public int mTrialDays;
	public int mChapterCount;
	public long mDataPosition;
	
	public MebookHeader() {
	
	}
	
	public long load(final SyInputStream is , final long pos ) throws MebookException {
		
		long headerSize = 0 ;
		try {
			SyInputStream sis = is;
			sis.setCharsetName("big5");
			sis.seek(pos);
			
			String szText = sis.readFixedString(SY_TAG.length());
			if (szText.compareTo(SY_TAG) != 0) {
				sis.close();
				sis = null;
				throw new MebookException("Not a Mebook");
			}
			
			mContentID = sis.readFixedString(CONTENTID_LENGTH);
			mMajorVersion = sis.readDigit(2);
			mMinorVersion = sis.readDigit(2);
			mUIMode = sis.readDigit(2);
			mEncodeMode = sis.readDigit(2);
			mTrialDays = sis.readDigit(2);

			sis.seek(sis.getFilePointer()+4); // BeginOffset
			mChapterCount = sis.readDigit(4);
			mTitleName = sis.readFixedString2(TITLENAME_LENGTH);

			mBookID = sis.readFixedString(BOOKID_LENGTH); 
			mSubID = sis.readFixedString(SUBID_LENGTH);
			
			int chp = mChapterCount;
			if (0 == chp) {
				chp = 1;
			}

			mDataPosition = sis.getFilePointer()+62+ CHAPTER_INFO_SIZE*chp ;
//			sis.close();
//			sis = null;
			
//			headerSize = mDataPosition + 4 - pos ;
			headerSize = mDataPosition - pos ;
			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return headerSize;
    }	
	
	public long load(final String file , final long pos ) throws MebookException {
		
		long headerSize = 0 ;
		try {
			SyInputStream sis = new SyInputStream(file);
			sis.setCharsetName("big5");
			sis.seek(pos);
			
			String szText = sis.readFixedString(SY_TAG.length());
			if (szText.compareTo(SY_TAG) != 0) {
				sis.close();
				sis = null;
				throw new MebookException("Not a Mebook");
			}
			
			mContentID = sis.readFixedString(CONTENTID_LENGTH);
			mMajorVersion = sis.readDigit(2);
			mMinorVersion = sis.readDigit(2);
			mUIMode = sis.readDigit(2);
			mEncodeMode = sis.readDigit(2);
			mTrialDays = sis.readDigit(2);

			sis.seek(sis.getFilePointer()+4); // BeginOffset
			mChapterCount = sis.readDigit(4);
			mTitleName = sis.readFixedString2(TITLENAME_LENGTH);

			mBookID = sis.readFixedString(BOOKID_LENGTH); 
			mSubID = sis.readFixedString(SUBID_LENGTH);
			
			int chp = mChapterCount;
			if (0 == chp) {
				chp = 1;
			}

			mDataPosition = sis.getFilePointer()+62+ CHAPTER_INFO_SIZE*chp ;
			sis.close();
			sis = null;
			
//			headerSize = mDataPosition + 4 - pos ;
			headerSize = mDataPosition - pos ;
			
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return headerSize;
    }  	
}
